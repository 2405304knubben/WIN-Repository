@model KE03_INTDEV_SE_2_Base.ViewModels.ProductOverviewViewModel
@{
    ViewData["Title"] = "Productoverzicht";
}

<video autoplay loop muted playsinline id="bg-video">
    <source src="/Videos/matrix.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<div class="product-overview">
    <div class="header-section mb-4">
        <h1 class="mb-3">Voorraad Producten en Onderdelen</h1>        
        <div class="controls-row">
            <div class="filters"> 
                <select class="form-select" id="statusFilter">
                    <option value="" disabled selected>Filter Status</option>
                    <option value="">Alles</option>
                    <option value="instock">In voorraad</option>
                    <option value="outofstock">Niet op voorraad</option>
                </select>
                <select class="form-select" id="typeFilter">
                    <option value="" disabled selected>Filter Type</option>
                    <option value="">Alles</option>
                    <option value="product">Product</option>
                    <option value="part">Onderdeel</option>
                </select>
            </div>
            <div class="actions">
                <a asp-controller="Product" asp-action="Create" class="btn btn-success">Nieuw Product</a>
                <a asp-controller="Part" asp-action="Create" class="btn btn-info">Nieuw Onderdeel</a>
            </div>
        </div>
    </div>

    <div class="products-container">
        @foreach (var item in Model.Products)
        {
            <div class="product-card" data-type="product">
                <div class="product-header">
                    <div class="product-id">@item.Name</div>
                    <div class="product-status @(item.Stock == 0 ? "status-outofstock" : (item.Stock < 15 ? "status-lowstock" : "status-instock"))">
                        @(item.Stock == 0 ? "Niet op voorraad" : (item.Stock < 15 ? "Bijna uitverkocht" : "In voorraad"))
                    </div>
                </div>
                <div class="product-content">
                    <div class="product-description">@item.Description</div>
                    <div class="product-details">
                        <div class="price-info">
                            <span class="label">Prijs</span>
                            <span class="value">€@item.Price.ToString("N2")</span>
                        </div>
                        <div class="stock-info">
                            <span class="label">Voorraad</span>
                            <span class="value">@item.Stock stuks</span>
                        </div>
                    </div>
                    @if (item.Parts != null && item.Parts.Any())
                    {
                        <div class="parts-section">
                            <div class="parts-header">
                                <span class="label">Gerelateerde Onderdelen:</span>
                            </div>
                            <div class="parts-list">
                                @foreach (var part in item.Parts)
                                {
                                    <div class="part-item">
                                        <span class="part-name">@part.Name</span>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="product-actions">
                    <a asp-controller="Product" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i
                            class="fa-solid fa-pen"></i></a>
                    <a asp-controller="Product" asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info"><i
                            class="fa-solid fa-info"></i></a>
                    <a asp-controller="Product" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger"><i
                            class="fa-solid fa-trash"></i></a>
                    <a asp-controller="Voorraad" asp-action="Create" asp-route-id="@item.Id" asp-route-type="product" class="btn btn-sm btn-success">
                        <i class="fa-solid fa-truck"></i></a>
                </div>
            </div>
        }

        @foreach (var item in Model.Parts)
        {
            <div class="product-card" data-type="part">
                <div class="product-header">
                    <div class="product-id">@item.Name</div>
                    <div class="product-status @(item.Stock == 0 ? "status-outofstock" : (item.Stock < 15 ? "status-lowstock" : "status-instock"))">
                        @(item.Stock == 0 ? "Niet op voorraad" : (item.Stock < 15 ? "Bijna uitverkocht" : "In voorraad"))
                    </div>
                </div>
                <div class="product-content">
                    <div class="product-description">@item.Description</div>
                    <div class="product-details">
                        <div class="price-info"> {/* Gewijzigd van usage-info en parts-list naar price-info */}
                            <span class="label">Prijs</span>
                            <span class="value">€@item.Price.ToString("N2")</span>
                        </div>
                        <div class="stock-info">
                            <span class="label">Voorraad</span>
                            <span class="value">@item.Stock stuks</span>
                        </div>
                    </div>
                </div>
                <div class="product-actions">
                    <a asp-controller="Part" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i
                            class="fa-solid fa-pen"></i></a>
                    <a asp-controller="Part" asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info"><i
                            class="fa-solid fa-info"></i></a>
                    <a asp-controller="Part" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger"><i
                            class="fa-solid fa-trash"></i></a>
                    <a asp-controller="Voorraad" asp-action="Create" asp-route-id="@item.Id" asp-route-type="part" class="btn btn-sm btn-success">
                        <i class="fa-solid fa-truck"></i></a>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .product-overview {
        padding: 20px;
        background-color: #f8f9fa; /* Behoud achtergrondkleur voor scrollende content */
        min-height: 100vh; /* Zorgt ervoor dat de achtergrond de hele viewport vult */
    }

    .header-section {
        position: sticky;
        top: 0; /* Maakt de header sticky aan de bovenkant */
        background-color: #f8f9fa; /* Achtergrond voor de sticky header */
        z-index: 100; /* Zorgt dat de header boven andere content blijft */
        padding: 10px 0; /* Padding voor de header */
        border-bottom: 1px solid #dee2e6; /* Subtiele lijn onder de header */
    }

    .controls-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px; /* Ruimte tussen filter- en actieknoppen */
    }

    .filters {
        display: flex;
        gap: 15px; /* Ruimte tussen de select-elementen */
    }

    .form-select {
        min-width: 150px; /* Minimale breedte voor de filters */
        padding: 8px 12px;
        border-radius: 6px;
        border: 1px solid #ddd;
        background-color: white;
    }
    .actions {
        display: flex;
        gap: 10px; /* Ruimte tussen actieknoppen */
    }

    .products-container {
        display: flex;
        flex-direction: column; /* Items onder elkaar */
        gap: 20px; /* Ruimte tussen de product cards */
        padding: 20px 0; /* Padding boven en onder de container */
    }

    .product-card {
        background: white;
        border: 1px solid #ddd;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s, box-shadow 0.2s;
        display: flex; /* Gebruik flexbox voor interne layout */
        gap: 20px; /* Ruimte tussen de kolommen binnen een card */
        align-items: stretch; /* Zorgt dat kolommen even hoog zijn */
        min-height: 150px; /* Minimale hoogte voor consistentie */
    }

    .product-card:hover {
        transform: translateX(5px); /* Subtiel hover effect */
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .product-header {
        flex: 0 0 200px; /* Vaste breedte voor de linkerkolom (naam/status) */
        display: flex;
        flex-direction: column;
        gap: 10px;
        padding-right: 20px; /* Ruimte voor de border */
        border-right: 1px solid #dee2e6; /* Scheidingslijn */
    }

    .product-content {
        flex: 1; /* Neemt de resterende ruimte in */
        display: flex;
        flex-direction: column;
        gap: 15px; /* Ruimte tussen content-elementen */
        padding: 0 20px; /* Padding binnen de content-kolom */
    }

    .product-id {
        font-weight: bold;
        font-size: 1.2em;
        color: #2c3e50;
    }

    .product-status {
        padding: 6px 12px;
        border-radius: 20px; /* Ronde hoeken voor status badges */
        font-size: 0.9em;
        font-weight: 500;
        text-align: center;
        width: fit-content; /* Past zich aan de tekstbreedte aan */
    }

    .status-instock {
        background-color: #d4edda; /* Groen voor 'in voorraad' */
        color: #155724;
    }

    .status-lowstock {
        background-color: #ffecb5; /* Oranje/geel voor 'bijna uitverkocht' */
        color: #664d03;
    }

    .status-outofstock {
        background-color: #f8d7da; /* Rood voor 'niet op voorraad' */
        color: #721c24;
    }

    .product-description {
        color: #6c757d;
        font-size: 0.95em;
        line-height: 1.5;
    }
    
    .product-details {
        background-color: #f8f9fa; /* Lichte achtergrond voor details sectie */
        border-radius: 8px;
        padding: 12px;
        display: flex;
        flex-direction: column; /* Details onder elkaar */
        gap: 10px; /* Ruimte tussen prijs en voorraad info */
    }

    .price-info,
    .stock-info {
        display: flex;
        flex-direction: column; /* Label boven waarde */
        gap: 5px;
    }

    .label {
        font-size: 0.85em;
        color: #6c757d;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .value {
        font-weight: 600;
        color: #2c3e50;
        font-size: 1.1em;
    }

    .parts-section {
        margin-top: auto; /* Duwt de onderdelen sectie naar beneden als er ruimte is */
    }

    .parts-header {
        margin-bottom: 8px;
    }

    .parts-list {
        display: flex;
        flex-wrap: wrap; /* Onderdelen kunnen naar volgende regel */
        gap: 8px;
    }

    .part-item {
        background-color: #e9ecef;
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 0.9em;
        color: #495057;
    }

    .product-actions {
        display: flex;
        flex-direction: column; /* Knoppen onder elkaar */
        gap: 8px;
        justify-content: center; /* Centreert knoppen verticaal */
        padding-left: 20px; /* Ruimte voor de border */
        border-left: 1px solid #dee2e6; /* Scheidingslijn */
        flex: 0 0 auto; /* Voorkomt dat deze kolom te veel krimpt/groeit */
    }

    .btn-sm {
        padding: 0.4rem 0.8rem; /* Iets meer padding voor betere klikbaarheid */
        border-radius: 6px;
    }

    .btn-sm i {
        font-size: 0.9em; /* Grootte van de iconen */
    }

    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
        color: #212529;
    }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
        color: white;
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }
    .btn-success { /* Stijl voor de "Nieuw Product/Onderdeel" en "Voorraad Bijbestellen" knoppen */
        background-color: #28a745;
        border-color: #28a745;
        color: white;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const statusFilter = document.getElementById('statusFilter');
        const typeFilter = document.getElementById('typeFilter');
        const productsContainer = document.querySelector('.products-container'); // Selecteer de container
        const productCards = Array.from(productsContainer.querySelectorAll('.product-card')); // Maak een statische array

        function applyFilters() {
            const statusValue = statusFilter.value;
            const typeValue = typeFilter.value;

            productCards.forEach(card => {
                let showStatus = true;
                let showType = true;

                // Status filter
                if (statusValue) {
                    const statusElement = card.querySelector('.product-status');
                    let currentStatus = 'outofstock'; // Default to outofstock
                    if (statusElement.classList.contains('status-instock')) {
                        currentStatus = 'instock';
                    } else if (statusElement.classList.contains('status-lowstock')) {
                        // Low stock is also considered 'instock' for filtering purposes
                        // unless you want a separate 'lowstock' filter option.
                        currentStatus = 'instock'; 
                    }
                    showStatus = (currentStatus === statusValue);
                }

                // Type filter
                if (typeValue) {
                    const currentType = card.dataset.type;
                    showType = (currentType === typeValue);
                }

                card.style.display = (showStatus && showType) ? 'flex' : 'none';
            });
        }

        if(statusFilter) statusFilter.addEventListener('change', applyFilters);
        if(typeFilter) typeFilter.addEventListener('change', applyFilters);
        
        // Apply filters on initial load if any filter has a pre-selected value (excluding disabled placeholder)
        if ((statusFilter && statusFilter.value && statusFilter.options[statusFilter.selectedIndex].text !== 'Filter Status') || 
            (typeFilter && typeFilter.value && typeFilter.options[typeFilter.selectedIndex].text !== 'Filter Type')) {
            applyFilters();
        }
    });
</script>
