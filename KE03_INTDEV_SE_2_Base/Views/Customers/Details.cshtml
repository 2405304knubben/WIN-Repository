@*
    CUSTOMER DETAILS VIEW
    =====================
    
    Read-only klant informatie weergave voor customer relationship
    management. Biedt comprehensive customer data visibility zonder
    editing capabilities.
    
    ARCHITECTUUR:
    - Strongly-typed Customer model voor type safety
    - Definition list voor structured data presentation
    - DisplayNameFor/DisplayFor helpers voor automatic rendering
    - Responsive Bootstrap grid layout
    
    BUSINESS CONTEXT:
    - Customer information lookup
    - CRM data verification
    - Customer status monitoring
    - Contact information reference
    
    EDUCATIEVE ASPECTEN:
    - Read-only data presentation patterns
    - Semantic HTML met definition lists
    - ASP.NET Core display helpers
    - Responsive design principles
    - Navigation workflow patterns
    
    UI/UX PATTERNS:
    - Clean information architecture
    - Matrix branding consistency
    - Clear section headers
    - Intuitive navigation buttons
    - Status indication voor customer state
*@

@model DataAccessLayer.Models.Customer

@{
    ViewData["Title"] = "Klant Informatie";
}

<h1 class="text-white">Informatie</h1>

<video autoplay loop muted playsinline id="bg-video">
    <source src="/Videos/matrix.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<div class="card matrix-card shadow mb-4">
    <div>
        <h4>Klant</h4>
        <hr />
        <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Address)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Address)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Active)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Active)
            </dd>
        </dl>
    </div>
</div>

<div>
    <a class="btn btn-success" asp-action="Edit" asp-route-id="@Model?.Id">Aanpassen</a> |
    <a class="btn btn-secondary" asp-action="Index">Terug naar klantenoverzicht</a>
</div>